Space Complexity of Selection Sort
The space complexity of Selection Sort is O(1).

This is because we use only constant extra space such as:

2 variables to enable swapping of elements.
One variable to keep track of smallest element in unsorted array.
Hence, in terms of Space Complexity, Selection Sort is optimal as the memory requirements remain same for every input.



/*****Program for Bubble Sort******/

using System;

namespace BubbleSort
{
    class Program
    {
        static void Main(string[] args)
        {
            double[] array = new double[] { 64, 34, 25, 12, 22, 11, 90 };
            double[] array_Empty = new double[] { };
            double[] array_SingleElement = new double[] { 64 };
            double[] array_TwoElement = new double[] { 64,34};

            foreach (var item in array_TwoElement)
            {
                Console.WriteLine(" BEFORE SORTING :: The  array elements are : " + item);
            }

            BubbleSort(array_TwoElement);

            foreach (var item in array_TwoElement)
            {
                Console.WriteLine("AFTER SORTING :: The sorted array elements are : " + item);
            }
            Console.ReadLine();
        }

        public static void BubbleSort(double[] array)
        {
            

            if (array.Length <= 0)
            {
                Console.WriteLine(" The input array is empty");
                return;
            }
                
            if(array.Length == 1) return; 

               
            for (int i=0;i<array.Length-1;i++)
            {

                bool swapped = false;
                for(int j=0;j<array.Length-i-1;j++)
                {
                    if (array[j] > array[j+1])
                        Swap(j, j+1, array);
                    swapped = true;
                }
                if (!swapped)
                    break; /** if swapping has not ocurred in the inner loop iteration then array is all sorted now so we are good to break rather than running loop again**/
                   

            }

        }

        public static void Swap(int index_i,int index_j, double[] array)
        {
            var temp = array[index_i];
            array[index_i] = array[index_j];
            array[index_j] = temp;
            
        }
    }
}

